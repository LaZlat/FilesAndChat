// <auto-generated />
using System;
using FilesAndChat.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FilesAndChat.Migrations
{
    [DbContext(typeof(TheContext))]
    partial class TheContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("FilesAndChat.Models.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("FilesAndChat.Models.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FriendsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("FilesAndChat.Models.FriendFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FriendId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("FriendId");

                    b.ToTable("FriendFiles");
                });

            modelBuilder.Entity("FilesAndChat.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Msg")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FilesAndChat.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FilesAndChat.Models.File", b =>
                {
                    b.HasOne("FilesAndChat.Models.User", null)
                        .WithMany("Files")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FilesAndChat.Models.Friend", b =>
                {
                    b.HasOne("FilesAndChat.Models.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FilesAndChat.Models.FriendFile", b =>
                {
                    b.HasOne("FilesAndChat.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId");

                    b.HasOne("FilesAndChat.Models.Friend", "Friend")
                        .WithMany("FriendFiles")
                        .HasForeignKey("FriendId");
                });

            modelBuilder.Entity("FilesAndChat.Models.Message", b =>
                {
                    b.HasOne("FilesAndChat.Models.User", null)
                        .WithMany("Msg")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
